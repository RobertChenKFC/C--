Terminals unused in grammar

    MK_DOT
    ERROR


State 191 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl_list
    2        | %empty

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: function_head MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE block MK_RBRACE

    8 function_head: type ID
    9              | VOID ID

   10 opt_param_list: param_list
   11               | %empty

   12 param_list: param_list MK_COMMA param
   13           | param

   14 param: type ID
   15      | type ID dim_fn

   16 dim_fn: MK_LB expr_null MK_RB
   17       | dim_fn MK_LB expr MK_RB

   18 expr_null: expr
   19          | %empty

   20 block: decl_list stmt_list
   21      | stmt_list
   22      | decl_list
   23      | %empty

   24 decl_list: decl_list decl
   25          | decl

   26 decl: type_decl
   27     | var_decl

   28 type_decl: TYPEDEF type id_list MK_SEMICOLON
   29          | TYPEDEF VOID id_list MK_SEMICOLON

   30 var_decl: type init_id_list MK_SEMICOLON

   31 type: INT
   32     | FLOAT
   33     | ID

   34 id_list: ID
   35        | id_list MK_COMMA ID
   36        | id_list MK_COMMA ID dim_decl
   37        | ID dim_decl

   38 dim_decl: MK_LB cexpr MK_RB
   39         | dim_decl MK_LB cexpr MK_RB

   40 cexpr: cexpr OP_PLUS mcexpr
   41      | cexpr OP_MINUS mcexpr
   42      | mcexpr

   43 mcexpr: mcexpr OP_TIMES cfactor
   44       | mcexpr OP_DIVIDE cfactor
   45       | cfactor

   46 cfactor: CONST
   47        | MK_LPAREN cexpr MK_RPAREN

   48 init_id_list: init_id
   49             | init_id_list MK_COMMA init_id

   50 init_id: ID
   51        | ID dim_decl
   52        | ID OP_ASSIGN relop_expr

   53 stmt_list: stmt_list stmt
   54          | stmt

   55 stmt: MK_LBRACE block MK_RBRACE
   56     | WHILE MK_LPAREN test MK_RPAREN stmt
   57     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   58     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   59     | IF MK_LPAREN test MK_RPAREN stmt
   60     | IF MK_LPAREN test MK_RPAREN stmt ELSE stmt
   61     | ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
   62     | MK_SEMICOLON
   63     | RETURN MK_SEMICOLON
   64     | RETURN relop_expr MK_SEMICOLON

   65 assign_expr_list: nonempty_assign_expr_list
   66                 | %empty

   67 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   68                          | assign_expr

   69 test: assign_expr

   70 assign_expr: ID OP_ASSIGN relop_expr
   71            | relop_expr

   72 relop_expr: relop_term
   73           | relop_expr OP_OR relop_term

   74 relop_term: relop_factor
   75           | relop_term OP_AND relop_factor

   76 relop_factor: expr
   77             | expr rel_op expr

   78 rel_op: OP_EQ
   79       | OP_GE
   80       | OP_LE
   81       | OP_NE
   82       | OP_GT
   83       | OP_LT

   84 relop_expr_list: nonempty_relop_expr_list
   85                | %empty

   86 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   87                         | relop_expr

   88 expr: expr add_op term
   89     | term

   90 add_op: OP_PLUS
   91       | OP_MINUS

   92 term: term mul_op factor
   93     | factor

   94 mul_op: OP_TIMES
   95       | OP_DIVIDE

   96 factor: MK_LPAREN relop_expr MK_RPAREN
   97       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | CONST
  100       | OP_MINUS CONST
  101       | OP_NOT CONST
  102       | ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  105       | var_ref
  106       | OP_MINUS var_ref
  107       | OP_NOT var_ref

  108 var_ref: ID
  109        | ID dim_list

  110 dim_list: dim_list MK_LB expr MK_RB
  111         | MK_LB expr MK_RB


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <lexeme> (258) 8 9 14 15 33 34 35 36 37 50 51 52 61 70 102 103 104 108 109
    CONST <const1> (259) 46 99 100 101
    VOID (260) 9 29
    INT (261) 31
    FLOAT (262) 32
    IF (263) 59 60
    ELSE (264) 60
    WHILE (265) 56
    FOR (266) 57
    TYPEDEF (267) 28 29
    OP_ASSIGN (268) 52 58 70
    OP_OR (269) 73
    OP_AND (270) 75
    OP_NOT (271) 98 101 104 107
    OP_EQ (272) 78
    OP_NE (273) 81
    OP_GT (274) 82
    OP_LT (275) 83
    OP_GE (276) 79
    OP_LE (277) 80
    OP_PLUS (278) 40 90
    OP_MINUS (279) 41 91 97 100 103 106
    OP_TIMES (280) 43 94
    OP_DIVIDE (281) 44 95
    MK_LB (282) 16 17 38 39 110 111
    MK_RB (283) 16 17 38 39 110 111
    MK_LPAREN (284) 7 47 56 57 59 60 61 96 97 98 102 103 104
    MK_RPAREN (285) 7 47 56 57 59 60 61 96 97 98 102 103 104
    MK_LBRACE (286) 7 55
    MK_RBRACE (287) 7 55
    MK_COMMA (288) 12 35 36 49 67 86
    MK_SEMICOLON (289) 28 29 30 57 58 61 62 63 64
    MK_DOT (290)
    ERROR (291)
    RETURN (292) 63 64


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    program <node> (39)
        on left: 1 2
        on right: 0
    global_decl_list <node> (40)
        on left: 3 4
        on right: 1 3
    global_decl <node> (41)
        on left: 5 6
        on right: 3 4
    function_decl <node> (42)
        on left: 7
        on right: 5 6
    function_head <node> (43)
        on left: 8 9
        on right: 7
    opt_param_list <node> (44)
        on left: 10 11
        on right: 7
    param_list <node> (45)
        on left: 12 13
        on right: 10 12
    param <node> (46)
        on left: 14 15
        on right: 12 13
    dim_fn <node> (47)
        on left: 16 17
        on right: 15 17
    expr_null <node> (48)
        on left: 18 19
        on right: 16
    block <node> (49)
        on left: 20 21 22 23
        on right: 7 55
    decl_list <node> (50)
        on left: 24 25
        on right: 5 20 22 24
    decl <node> (51)
        on left: 26 27
        on right: 24 25
    type_decl <node> (52)
        on left: 28 29
        on right: 26
    var_decl <node> (53)
        on left: 30
        on right: 27
    type <node> (54)
        on left: 31 32 33
        on right: 8 14 15 28 30
    id_list <node> (55)
        on left: 34 35 36 37
        on right: 28 29 35 36
    dim_decl <node> (56)
        on left: 38 39
        on right: 36 37 39 51
    cexpr <node> (57)
        on left: 40 41 42
        on right: 38 39 40 41 47
    mcexpr <node> (58)
        on left: 43 44 45
        on right: 40 41 42 43 44
    cfactor <node> (59)
        on left: 46 47
        on right: 43 44 45
    init_id_list <node> (60)
        on left: 48 49
        on right: 30 49
    init_id <node> (61)
        on left: 50 51 52
        on right: 48 49
    stmt_list <node> (62)
        on left: 53 54
        on right: 20 21 53
    stmt <node> (63)
        on left: 55 56 57 58 59 60 61 62 63 64
        on right: 53 54 56 57 59 60
    assign_expr_list <node> (64)
        on left: 65 66
        on right: 57
    nonempty_assign_expr_list <node> (65)
        on left: 67 68
        on right: 65 67
    test <node> (66)
        on left: 69
        on right: 56 59 60
    assign_expr <node> (67)
        on left: 70 71
        on right: 67 68 69
    relop_expr <node> (68)
        on left: 72 73
        on right: 52 58 64 70 71 73 86 87 96 97 98
    relop_term <node> (69)
        on left: 74 75
        on right: 72 73 75
    relop_factor <node> (70)
        on left: 76 77
        on right: 74 75
    rel_op <node> (71)
        on left: 78 79 80 81 82 83
        on right: 77
    relop_expr_list <node> (72)
        on left: 84 85
        on right: 57 61 102 103 104
    nonempty_relop_expr_list <node> (73)
        on left: 86 87
        on right: 84 86
    expr <node> (74)
        on left: 88 89
        on right: 17 18 76 77 88 110 111
    add_op <node> (75)
        on left: 90 91
        on right: 88
    term <node> (76)
        on left: 92 93
        on right: 88 89 92
    mul_op <node> (77)
        on left: 94 95
        on right: 92
    factor <node> (78)
        on left: 96 97 98 99 100 101 102 103 104 105 106 107
        on right: 92 93
    var_ref <node> (79)
        on left: 108 109
        on right: 58 105 106 107
    dim_list <node> (80)
        on left: 110 111
        on right: 109 110


State 0

    0 $accept: . program $end

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 2 (program)

    program           go to state 6
    global_decl_list  go to state 7
    global_decl       go to state 8
    function_decl     go to state 9
    function_head     go to state 10
    decl_list         go to state 11
    decl              go to state 12
    type_decl         go to state 13
    var_decl          go to state 14
    type              go to state 15


State 1

   33 type: ID .

    $default  reduce using rule 33 (type)


State 2

    9 function_head: VOID . ID

    ID  shift, and go to state 16


State 3

   31 type: INT .

    $default  reduce using rule 31 (type)


State 4

   32 type: FLOAT .

    $default  reduce using rule 32 (type)


State 5

   28 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   29          | TYPEDEF . VOID id_list MK_SEMICOLON

    ID     shift, and go to state 1
    VOID   shift, and go to state 17
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type  go to state 18


State 6

    0 $accept: program . $end

    $end  shift, and go to state 19


State 7

    1 program: global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_decl    go to state 20
    function_decl  go to state 9
    function_head  go to state 10
    decl_list      go to state 11
    decl           go to state 12
    type_decl      go to state 13
    var_decl       go to state 14
    type           go to state 15


State 8

    4 global_decl_list: global_decl .

    $default  reduce using rule 4 (global_decl_list)


State 9

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


State 10

    7 function_decl: function_head . MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  shift, and go to state 21


State 11

    5 global_decl: decl_list . function_decl
   24 decl_list: decl_list . decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    function_decl  go to state 22
    function_head  go to state 10
    decl           go to state 23
    type_decl      go to state 13
    var_decl       go to state 14
    type           go to state 15


State 12

   25 decl_list: decl .

    $default  reduce using rule 25 (decl_list)


State 13

   26 decl: type_decl .

    $default  reduce using rule 26 (decl)


State 14

   27 decl: var_decl .

    $default  reduce using rule 27 (decl)


State 15

    8 function_head: type . ID
   30 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 24

    init_id_list  go to state 25
    init_id       go to state 26


State 16

    9 function_head: VOID ID .

    $default  reduce using rule 9 (function_head)


State 17

   29 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON

    ID  shift, and go to state 27

    id_list  go to state 28


State 18

   28 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 27

    id_list  go to state 29


State 19

    0 $accept: program $end .

    $default  accept


State 20

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


State 21

    7 function_decl: function_head MK_LPAREN . opt_param_list MK_RPAREN MK_LBRACE block MK_RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    $default  reduce using rule 11 (opt_param_list)

    opt_param_list  go to state 30
    param_list      go to state 31
    param           go to state 32
    type            go to state 33


State 22

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


State 23

   24 decl_list: decl_list decl .

    $default  reduce using rule 24 (decl_list)


State 24

    8 function_head: type ID .
   50 init_id: ID .
   51        | ID . dim_decl
   52        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 34
    MK_LB      shift, and go to state 35

    MK_LPAREN  reduce using rule 8 (function_head)
    $default   reduce using rule 50 (init_id)

    dim_decl  go to state 36


State 25

   30 var_decl: type init_id_list . MK_SEMICOLON
   49 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 38


State 26

   48 init_id_list: init_id .

    $default  reduce using rule 48 (init_id_list)


State 27

   34 id_list: ID .
   37        | ID . dim_decl

    MK_LB  shift, and go to state 35

    $default  reduce using rule 34 (id_list)

    dim_decl  go to state 39


State 28

   29 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   35 id_list: id_list . MK_COMMA ID
   36        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 40
    MK_SEMICOLON  shift, and go to state 41


State 29

   28 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   35 id_list: id_list . MK_COMMA ID
   36        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 40
    MK_SEMICOLON  shift, and go to state 42


State 30

    7 function_decl: function_head MK_LPAREN opt_param_list . MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_RPAREN  shift, and go to state 43


State 31

   10 opt_param_list: param_list .
   12 param_list: param_list . MK_COMMA param

    MK_COMMA  shift, and go to state 44

    $default  reduce using rule 10 (opt_param_list)


State 32

   13 param_list: param .

    $default  reduce using rule 13 (param_list)


State 33

   14 param: type . ID
   15      | type . ID dim_fn

    ID  shift, and go to state 45


State 34

   52 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr    go to state 51
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 35

   38 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 58
    MK_LPAREN  shift, and go to state 59

    cexpr    go to state 60
    mcexpr   go to state 61
    cfactor  go to state 62


State 36

   39 dim_decl: dim_decl . MK_LB cexpr MK_RB
   51 init_id: ID dim_decl .

    MK_LB  shift, and go to state 63

    $default  reduce using rule 51 (init_id)


State 37

   49 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 64

    init_id  go to state 65


State 38

   30 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 30 (var_decl)


State 39

   37 id_list: ID dim_decl .
   39 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 63

    $default  reduce using rule 37 (id_list)


State 40

   35 id_list: id_list MK_COMMA . ID
   36        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 66


State 41

   29 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 29 (type_decl)


State 42

   28 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 28 (type_decl)


State 43

    7 function_decl: function_head MK_LPAREN opt_param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 67


State 44

   12 param_list: param_list MK_COMMA . param

    ID     shift, and go to state 1
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param  go to state 68
    type   go to state 33


State 45

   14 param: type ID .
   15      | type ID . dim_fn

    MK_LB  shift, and go to state 69

    $default  reduce using rule 14 (param)

    dim_fn  go to state 70


State 46

  102 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID .
  109        | ID . dim_list

    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 72

    $default  reduce using rule 108 (var_ref)

    dim_list  go to state 73


State 47

   99 factor: CONST .

    $default  reduce using rule 99 (factor)


State 48

   98 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
  101       | OP_NOT . CONST
  104       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
  107       | OP_NOT . var_ref

    ID         shift, and go to state 74
    CONST      shift, and go to state 75
    MK_LPAREN  shift, and go to state 76

    var_ref  go to state 77


State 49

   97 factor: OP_MINUS . MK_LPAREN relop_expr MK_RPAREN
  100       | OP_MINUS . CONST
  103       | OP_MINUS . ID MK_LPAREN relop_expr_list MK_RPAREN
  106       | OP_MINUS . var_ref

    ID         shift, and go to state 78
    CONST      shift, and go to state 79
    MK_LPAREN  shift, and go to state 80

    var_ref  go to state 81


State 50

   96 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr    go to state 82
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 51

   52 init_id: ID OP_ASSIGN relop_expr .
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 83

    $default  reduce using rule 52 (init_id)


State 52

   72 relop_expr: relop_term .
   75 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 84

    $default  reduce using rule 72 (relop_expr)


State 53

   74 relop_term: relop_factor .

    $default  reduce using rule 74 (relop_term)


State 54

   76 relop_factor: expr .
   77             | expr . rel_op expr
   88 expr: expr . add_op term

    OP_EQ     shift, and go to state 85
    OP_NE     shift, and go to state 86
    OP_GT     shift, and go to state 87
    OP_LT     shift, and go to state 88
    OP_GE     shift, and go to state 89
    OP_LE     shift, and go to state 90
    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92

    $default  reduce using rule 76 (relop_factor)

    rel_op  go to state 93
    add_op  go to state 94


State 55

   89 expr: term .
   92 term: term . mul_op factor

    OP_TIMES   shift, and go to state 95
    OP_DIVIDE  shift, and go to state 96

    $default  reduce using rule 89 (expr)

    mul_op  go to state 97


State 56

   93 term: factor .

    $default  reduce using rule 93 (term)


State 57

  105 factor: var_ref .

    $default  reduce using rule 105 (factor)


State 58

   46 cfactor: CONST .

    $default  reduce using rule 46 (cfactor)


State 59

   47 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 58
    MK_LPAREN  shift, and go to state 59

    cexpr    go to state 98
    mcexpr   go to state 61
    cfactor  go to state 62


State 60

   38 dim_decl: MK_LB cexpr . MK_RB
   40 cexpr: cexpr . OP_PLUS mcexpr
   41      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 99
    OP_MINUS  shift, and go to state 100
    MK_RB     shift, and go to state 101


State 61

   42 cexpr: mcexpr .
   43 mcexpr: mcexpr . OP_TIMES cfactor
   44       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 102
    OP_DIVIDE  shift, and go to state 103

    $default  reduce using rule 42 (cexpr)


State 62

   45 mcexpr: cfactor .

    $default  reduce using rule 45 (mcexpr)


State 63

   39 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 58
    MK_LPAREN  shift, and go to state 59

    cexpr    go to state 104
    mcexpr   go to state 61
    cfactor  go to state 62


State 64

   50 init_id: ID .
   51        | ID . dim_decl
   52        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 34
    MK_LB      shift, and go to state 35

    $default  reduce using rule 50 (init_id)

    dim_decl  go to state 36


State 65

   49 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 49 (init_id_list)


State 66

   35 id_list: id_list MK_COMMA ID .
   36        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 35

    $default  reduce using rule 35 (id_list)

    dim_decl  go to state 105


State 67

    7 function_decl: function_head MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 106
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 107
    WHILE         shift, and go to state 108
    FOR           shift, and go to state 109
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 110
    MK_SEMICOLON  shift, and go to state 111
    RETURN        shift, and go to state 112

    $default  reduce using rule 23 (block)

    block      go to state 113
    decl_list  go to state 114
    decl       go to state 12
    type_decl  go to state 13
    var_decl   go to state 14
    type       go to state 115
    stmt_list  go to state 116
    stmt       go to state 117
    var_ref    go to state 118


State 68

   12 param_list: param_list MK_COMMA param .

    $default  reduce using rule 12 (param_list)


State 69

   16 dim_fn: MK_LB . expr_null MK_RB

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 19 (expr_null)

    expr_null  go to state 119
    expr       go to state 120
    term       go to state 55
    factor     go to state 56
    var_ref    go to state 57


State 70

   15 param: type ID dim_fn .
   17 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 121

    $default  reduce using rule 15 (param)


State 71

  111 dim_list: MK_LB . expr MK_RB

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    expr     go to state 122
    term     go to state 55
    factor   go to state 56
    var_ref  go to state 57


State 72

  102 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 123
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 124
    nonempty_relop_expr_list  go to state 125
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    var_ref                   go to state 57


State 73

  109 var_ref: ID dim_list .
  110 dim_list: dim_list . MK_LB expr MK_RB

    MK_LB  shift, and go to state 126

    $default  reduce using rule 109 (var_ref)


State 74

  104 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID .
  109        | ID . dim_list

    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 127

    $default  reduce using rule 108 (var_ref)

    dim_list  go to state 73


State 75

  101 factor: OP_NOT CONST .

    $default  reduce using rule 101 (factor)


State 76

   98 factor: OP_NOT MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr    go to state 128
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 77

  107 factor: OP_NOT var_ref .

    $default  reduce using rule 107 (factor)


State 78

  103 factor: OP_MINUS ID . MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID .
  109        | ID . dim_list

    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 129

    $default  reduce using rule 108 (var_ref)

    dim_list  go to state 73


State 79

  100 factor: OP_MINUS CONST .

    $default  reduce using rule 100 (factor)


State 80

   97 factor: OP_MINUS MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr    go to state 130
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 81

  106 factor: OP_MINUS var_ref .

    $default  reduce using rule 106 (factor)


State 82

   73 relop_expr: relop_expr . OP_OR relop_term
   96 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 83
    MK_RPAREN  shift, and go to state 131


State 83

   73 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_term    go to state 132
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 84

   75 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_factor  go to state 133
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 85

   78 rel_op: OP_EQ .

    $default  reduce using rule 78 (rel_op)


State 86

   81 rel_op: OP_NE .

    $default  reduce using rule 81 (rel_op)


State 87

   82 rel_op: OP_GT .

    $default  reduce using rule 82 (rel_op)


State 88

   83 rel_op: OP_LT .

    $default  reduce using rule 83 (rel_op)


State 89

   79 rel_op: OP_GE .

    $default  reduce using rule 79 (rel_op)


State 90

   80 rel_op: OP_LE .

    $default  reduce using rule 80 (rel_op)


State 91

   90 add_op: OP_PLUS .

    $default  reduce using rule 90 (add_op)


State 92

   91 add_op: OP_MINUS .

    $default  reduce using rule 91 (add_op)


State 93

   77 relop_factor: expr rel_op . expr

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    expr     go to state 134
    term     go to state 55
    factor   go to state 56
    var_ref  go to state 57


State 94

   88 expr: expr add_op . term

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    term     go to state 135
    factor   go to state 56
    var_ref  go to state 57


State 95

   94 mul_op: OP_TIMES .

    $default  reduce using rule 94 (mul_op)


State 96

   95 mul_op: OP_DIVIDE .

    $default  reduce using rule 95 (mul_op)


State 97

   92 term: term mul_op . factor

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    factor   go to state 136
    var_ref  go to state 57


State 98

   40 cexpr: cexpr . OP_PLUS mcexpr
   41      | cexpr . OP_MINUS mcexpr
   47 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 99
    OP_MINUS   shift, and go to state 100
    MK_RPAREN  shift, and go to state 137


State 99

   40 cexpr: cexpr OP_PLUS . mcexpr

    CONST      shift, and go to state 58
    MK_LPAREN  shift, and go to state 59

    mcexpr   go to state 138
    cfactor  go to state 62


State 100

   41 cexpr: cexpr OP_MINUS . mcexpr

    CONST      shift, and go to state 58
    MK_LPAREN  shift, and go to state 59

    mcexpr   go to state 139
    cfactor  go to state 62


State 101

   38 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 38 (dim_decl)


State 102

   43 mcexpr: mcexpr OP_TIMES . cfactor

    CONST      shift, and go to state 58
    MK_LPAREN  shift, and go to state 59

    cfactor  go to state 140


State 103

   44 mcexpr: mcexpr OP_DIVIDE . cfactor

    CONST      shift, and go to state 58
    MK_LPAREN  shift, and go to state 59

    cfactor  go to state 141


State 104

   39 dim_decl: dim_decl MK_LB cexpr . MK_RB
   40 cexpr: cexpr . OP_PLUS mcexpr
   41      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 99
    OP_MINUS  shift, and go to state 100
    MK_RB     shift, and go to state 142


State 105

   36 id_list: id_list MK_COMMA ID dim_decl .
   39 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 63

    $default  reduce using rule 36 (id_list)


State 106

   33 type: ID .
   61 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  108 var_ref: ID .
  109        | ID . dim_list

    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 143

    OP_ASSIGN  reduce using rule 108 (var_ref)
    $default   reduce using rule 33 (type)

    dim_list  go to state 73


State 107

   59 stmt: IF . MK_LPAREN test MK_RPAREN stmt
   60     | IF . MK_LPAREN test MK_RPAREN stmt ELSE stmt

    MK_LPAREN  shift, and go to state 144


State 108

   56 stmt: WHILE . MK_LPAREN test MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 145


State 109

   57 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 146


State 110

   55 stmt: MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 106
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 107
    WHILE         shift, and go to state 108
    FOR           shift, and go to state 109
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 110
    MK_SEMICOLON  shift, and go to state 111
    RETURN        shift, and go to state 112

    $default  reduce using rule 23 (block)

    block      go to state 147
    decl_list  go to state 114
    decl       go to state 12
    type_decl  go to state 13
    var_decl   go to state 14
    type       go to state 115
    stmt_list  go to state 116
    stmt       go to state 117
    var_ref    go to state 118


State 111

   62 stmt: MK_SEMICOLON .

    $default  reduce using rule 62 (stmt)


State 112

   63 stmt: RETURN . MK_SEMICOLON
   64     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 46
    CONST         shift, and go to state 47
    OP_NOT        shift, and go to state 48
    OP_MINUS      shift, and go to state 49
    MK_LPAREN     shift, and go to state 50
    MK_SEMICOLON  shift, and go to state 148

    relop_expr    go to state 149
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 113

    7 function_decl: function_head MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 150


State 114

   20 block: decl_list . stmt_list
   22      | decl_list .
   24 decl_list: decl_list . decl

    ID            shift, and go to state 106
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 107
    WHILE         shift, and go to state 108
    FOR           shift, and go to state 109
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 110
    MK_SEMICOLON  shift, and go to state 111
    RETURN        shift, and go to state 112

    $default  reduce using rule 22 (block)

    decl       go to state 23
    type_decl  go to state 13
    var_decl   go to state 14
    type       go to state 115
    stmt_list  go to state 151
    stmt       go to state 117
    var_ref    go to state 118


State 115

   30 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 64

    init_id_list  go to state 25
    init_id       go to state 26


State 116

   21 block: stmt_list .
   53 stmt_list: stmt_list . stmt

    ID            shift, and go to state 152
    IF            shift, and go to state 107
    WHILE         shift, and go to state 108
    FOR           shift, and go to state 109
    MK_LBRACE     shift, and go to state 110
    MK_SEMICOLON  shift, and go to state 111
    RETURN        shift, and go to state 112

    $default  reduce using rule 21 (block)

    stmt     go to state 153
    var_ref  go to state 118


State 117

   54 stmt_list: stmt .

    $default  reduce using rule 54 (stmt_list)


State 118

   58 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON

    OP_ASSIGN  shift, and go to state 154


State 119

   16 dim_fn: MK_LB expr_null . MK_RB

    MK_RB  shift, and go to state 155


State 120

   18 expr_null: expr .
   88 expr: expr . add_op term

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92

    $default  reduce using rule 18 (expr_null)

    add_op  go to state 94


State 121

   17 dim_fn: dim_fn MK_LB . expr MK_RB

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    expr     go to state 156
    term     go to state 55
    factor   go to state 56
    var_ref  go to state 57


State 122

   88 expr: expr . add_op term
  111 dim_list: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92
    MK_RB     shift, and go to state 157

    add_op  go to state 94


State 123

   73 relop_expr: relop_expr . OP_OR relop_term
   87 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 83

    $default  reduce using rule 87 (nonempty_relop_expr_list)


State 124

  102 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 158


State 125

   84 relop_expr_list: nonempty_relop_expr_list .
   86 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 159

    $default  reduce using rule 84 (relop_expr_list)


State 126

  110 dim_list: dim_list MK_LB . expr MK_RB

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    expr     go to state 160
    term     go to state 55
    factor   go to state 56
    var_ref  go to state 57


State 127

  104 factor: OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 123
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 161
    nonempty_relop_expr_list  go to state 125
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    var_ref                   go to state 57


State 128

   73 relop_expr: relop_expr . OP_OR relop_term
   98 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 83
    MK_RPAREN  shift, and go to state 162


State 129

  103 factor: OP_MINUS ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 123
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 163
    nonempty_relop_expr_list  go to state 125
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    var_ref                   go to state 57


State 130

   73 relop_expr: relop_expr . OP_OR relop_term
   97 factor: OP_MINUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 83
    MK_RPAREN  shift, and go to state 164


State 131

   96 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 96 (factor)


State 132

   73 relop_expr: relop_expr OP_OR relop_term .
   75 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 84

    $default  reduce using rule 73 (relop_expr)


State 133

   75 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 75 (relop_term)


State 134

   77 relop_factor: expr rel_op expr .
   88 expr: expr . add_op term

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92

    $default  reduce using rule 77 (relop_factor)

    add_op  go to state 94


State 135

   88 expr: expr add_op term .
   92 term: term . mul_op factor

    OP_TIMES   shift, and go to state 95
    OP_DIVIDE  shift, and go to state 96

    $default  reduce using rule 88 (expr)

    mul_op  go to state 97


State 136

   92 term: term mul_op factor .

    $default  reduce using rule 92 (term)


State 137

   47 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 47 (cfactor)


State 138

   40 cexpr: cexpr OP_PLUS mcexpr .
   43 mcexpr: mcexpr . OP_TIMES cfactor
   44       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 102
    OP_DIVIDE  shift, and go to state 103

    $default  reduce using rule 40 (cexpr)


State 139

   41 cexpr: cexpr OP_MINUS mcexpr .
   43 mcexpr: mcexpr . OP_TIMES cfactor
   44       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 102
    OP_DIVIDE  shift, and go to state 103

    $default  reduce using rule 41 (cexpr)


State 140

   43 mcexpr: mcexpr OP_TIMES cfactor .

    $default  reduce using rule 43 (mcexpr)


State 141

   44 mcexpr: mcexpr OP_DIVIDE cfactor .

    $default  reduce using rule 44 (mcexpr)


State 142

   39 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 39 (dim_decl)


State 143

   61 stmt: ID MK_LPAREN . relop_expr_list MK_RPAREN MK_SEMICOLON

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 123
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 165
    nonempty_relop_expr_list  go to state 125
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    var_ref                   go to state 57


State 144

   59 stmt: IF MK_LPAREN . test MK_RPAREN stmt
   60     | IF MK_LPAREN . test MK_RPAREN stmt ELSE stmt

    ID         shift, and go to state 166
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    test          go to state 167
    assign_expr   go to state 168
    relop_expr    go to state 169
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 145

   56 stmt: WHILE MK_LPAREN . test MK_RPAREN stmt

    ID         shift, and go to state 166
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    test          go to state 170
    assign_expr   go to state 168
    relop_expr    go to state 169
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 146

   57 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 166
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 66 (assign_expr_list)

    assign_expr_list           go to state 171
    nonempty_assign_expr_list  go to state 172
    assign_expr                go to state 173
    relop_expr                 go to state 169
    relop_term                 go to state 52
    relop_factor               go to state 53
    expr                       go to state 54
    term                       go to state 55
    factor                     go to state 56
    var_ref                    go to state 57


State 147

   55 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 174


State 148

   63 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 63 (stmt)


State 149

   64 stmt: RETURN relop_expr . MK_SEMICOLON
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 83
    MK_SEMICOLON  shift, and go to state 175


State 150

    7 function_decl: function_head MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


State 151

   20 block: decl_list stmt_list .
   53 stmt_list: stmt_list . stmt

    ID            shift, and go to state 152
    IF            shift, and go to state 107
    WHILE         shift, and go to state 108
    FOR           shift, and go to state 109
    MK_LBRACE     shift, and go to state 110
    MK_SEMICOLON  shift, and go to state 111
    RETURN        shift, and go to state 112

    $default  reduce using rule 20 (block)

    stmt     go to state 153
    var_ref  go to state 118


State 152

   61 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  108 var_ref: ID .
  109        | ID . dim_list

    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 143

    $default  reduce using rule 108 (var_ref)

    dim_list  go to state 73


State 153

   53 stmt_list: stmt_list stmt .

    $default  reduce using rule 53 (stmt_list)


State 154

   58 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr    go to state 176
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 155

   16 dim_fn: MK_LB expr_null MK_RB .

    $default  reduce using rule 16 (dim_fn)


State 156

   17 dim_fn: dim_fn MK_LB expr . MK_RB
   88 expr: expr . add_op term

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92
    MK_RB     shift, and go to state 177

    add_op  go to state 94


State 157

  111 dim_list: MK_LB expr MK_RB .

    $default  reduce using rule 111 (dim_list)


State 158

  102 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 102 (factor)


State 159

   86 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr    go to state 178
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 160

   88 expr: expr . add_op term
  110 dim_list: dim_list MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92
    MK_RB     shift, and go to state 179

    add_op  go to state 94


State 161

  104 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 180


State 162

   98 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 98 (factor)


State 163

  103 factor: OP_MINUS ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 181


State 164

   97 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 97 (factor)


State 165

   61 stmt: ID MK_LPAREN relop_expr_list . MK_RPAREN MK_SEMICOLON

    MK_RPAREN  shift, and go to state 182


State 166

   70 assign_expr: ID . OP_ASSIGN relop_expr
  102 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID .
  109        | ID . dim_list

    OP_ASSIGN  shift, and go to state 183
    MK_LB      shift, and go to state 71
    MK_LPAREN  shift, and go to state 72

    $default  reduce using rule 108 (var_ref)

    dim_list  go to state 73


State 167

   59 stmt: IF MK_LPAREN test . MK_RPAREN stmt
   60     | IF MK_LPAREN test . MK_RPAREN stmt ELSE stmt

    MK_RPAREN  shift, and go to state 184


State 168

   69 test: assign_expr .

    $default  reduce using rule 69 (test)


State 169

   71 assign_expr: relop_expr .
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 83

    $default  reduce using rule 71 (assign_expr)


State 170

   56 stmt: WHILE MK_LPAREN test . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 185


State 171

   57 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 186


State 172

   65 assign_expr_list: nonempty_assign_expr_list .
   67 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 187

    $default  reduce using rule 65 (assign_expr_list)


State 173

   68 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 68 (nonempty_assign_expr_list)


State 174

   55 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 55 (stmt)


State 175

   64 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 64 (stmt)


State 176

   58 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 83
    MK_SEMICOLON  shift, and go to state 188


State 177

   17 dim_fn: dim_fn MK_LB expr MK_RB .

    $default  reduce using rule 17 (dim_fn)


State 178

   73 relop_expr: relop_expr . OP_OR relop_term
   86 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 83

    $default  reduce using rule 86 (nonempty_relop_expr_list)


State 179

  110 dim_list: dim_list MK_LB expr MK_RB .

    $default  reduce using rule 110 (dim_list)


State 180

  104 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 104 (factor)


State 181

  103 factor: OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 103 (factor)


State 182

   61 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 189


State 183

   70 assign_expr: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr    go to state 190
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 184

   59 stmt: IF MK_LPAREN test MK_RPAREN . stmt
   60     | IF MK_LPAREN test MK_RPAREN . stmt ELSE stmt

    ID            shift, and go to state 152
    IF            shift, and go to state 107
    WHILE         shift, and go to state 108
    FOR           shift, and go to state 109
    MK_LBRACE     shift, and go to state 110
    MK_SEMICOLON  shift, and go to state 111
    RETURN        shift, and go to state 112

    stmt     go to state 191
    var_ref  go to state 118


State 185

   56 stmt: WHILE MK_LPAREN test MK_RPAREN . stmt

    ID            shift, and go to state 152
    IF            shift, and go to state 107
    WHILE         shift, and go to state 108
    FOR           shift, and go to state 109
    MK_LBRACE     shift, and go to state 110
    MK_SEMICOLON  shift, and go to state 111
    RETURN        shift, and go to state 112

    stmt     go to state 192
    var_ref  go to state 118


State 186

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 123
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 193
    nonempty_relop_expr_list  go to state 125
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    var_ref                   go to state 57


State 187

   67 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 166
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    assign_expr   go to state 194
    relop_expr    go to state 169
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 188

   58 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 58 (stmt)


State 189

   61 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 61 (stmt)


State 190

   70 assign_expr: ID OP_ASSIGN relop_expr .
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 83

    $default  reduce using rule 70 (assign_expr)


State 191

   59 stmt: IF MK_LPAREN test MK_RPAREN stmt .
   60     | IF MK_LPAREN test MK_RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 195

    ELSE      [reduce using rule 59 (stmt)]
    $default  reduce using rule 59 (stmt)


State 192

   56 stmt: WHILE MK_LPAREN test MK_RPAREN stmt .

    $default  reduce using rule 56 (stmt)


State 193

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 196


State 194

   67 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 67 (nonempty_assign_expr_list)


State 195

   60 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE . stmt

    ID            shift, and go to state 152
    IF            shift, and go to state 107
    WHILE         shift, and go to state 108
    FOR           shift, and go to state 109
    MK_LBRACE     shift, and go to state 110
    MK_SEMICOLON  shift, and go to state 111
    RETURN        shift, and go to state 112

    stmt     go to state 197
    var_ref  go to state 118


State 196

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 166
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 66 (assign_expr_list)

    assign_expr_list           go to state 198
    nonempty_assign_expr_list  go to state 172
    assign_expr                go to state 173
    relop_expr                 go to state 169
    relop_term                 go to state 52
    relop_factor               go to state 53
    expr                       go to state 54
    term                       go to state 55
    factor                     go to state 56
    var_ref                    go to state 57


State 197

   60 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE stmt .

    $default  reduce using rule 60 (stmt)


State 198

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 199


State 199

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 152
    IF            shift, and go to state 107
    WHILE         shift, and go to state 108
    FOR           shift, and go to state 109
    MK_LBRACE     shift, and go to state 110
    MK_SEMICOLON  shift, and go to state 111
    RETURN        shift, and go to state 112

    stmt     go to state 200
    var_ref  go to state 118


State 200

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 57 (stmt)
